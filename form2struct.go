package main

import (
	"flag"
	"fmt"
	"log"
	"net/url"
	"os"
	"unicode"

	"github.com/gee-m/go-helpers/gstrings"
)

var (
	logger     = log.New(os.Stderr, "", 0)
	structName = "AutoGenerated"
)

func main() {
	rawForm := flag.String("form", "", "use a x-www-form-urlencoded compatible format")
	flag.Parse()

	if rawForm == nil || *rawForm == "" {
		logger.Fatal("Please feed me a form (--form)")
	}

	vals, err := url.ParseQuery(*rawForm)
	if err != nil {
		logger.Fatalf("Got error parsing: %s", err.Error())
	}

	fmt.Printf("type %s struct{\n", structName)
	for k := range vals {
		// TODO: analyze 'v'alue to get the go type
		fmt.Printf("\t%s string `schema:\"%s\"`\n", gstrings.CamelToSnake(k, true), k)
	}
	fmt.Printf("}\n")

	// TODO: run gofmt if available on the generated struct
}

func capitalize(s string) string {
	if s == "" {
		return s
	}
	f := string(unicode.ToUpper(rune(s[0])))
	if len(s) == 1 {
		return f
	}
	return f + s[1:]
}
